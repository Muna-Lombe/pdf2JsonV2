/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumPageContentType } from "./EnumPageContentType";
import {
  IsEnum,
  IsOptional,
  IsDate,
  ValidateNested,
  IsString,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { FileInput } from "../../fileInput/base/FileInput";
import { PageJsonData } from "../../pageJsonData/base/PageJsonData";
import { Section } from "../../section/base/Section";

@ObjectType()
class Page {
  @ApiProperty({
    required: false,
    enum: EnumPageContentType,
  })
  @IsEnum(EnumPageContentType)
  @IsOptional()
  @Field(() => EnumPageContentType, {
    nullable: true,
  })
  contentType?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => FileInput,
  })
  @ValidateNested()
  @Type(() => FileInput)
  @IsOptional()
  fileInput?: FileInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [PageJsonData],
  })
  @ValidateNested()
  @Type(() => PageJsonData)
  @IsOptional()
  pageJsonDataItems?: Array<PageJsonData>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  pageNumber!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Section],
  })
  @ValidateNested()
  @Type(() => Section)
  @IsOptional()
  sections?: Array<Section>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Page as Page };
